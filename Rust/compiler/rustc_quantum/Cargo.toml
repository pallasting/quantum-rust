[package]
name = "rustc_quantum"
version = "1.0.0"
edition = "2021"
authors = ["Quantum Rust Team"]
description = "Quantum-enhanced Rust compiler with Arrow data structures"
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-lang/rust"
keywords = ["quantum", "compiler", "arrow", "optimization"]
categories = ["compilers", "development-tools"]

[workspace]
# Empty workspace to avoid conflicts

[lib]
name = "rustc_quantum"
crate-type = ["dylib", "rlib"]

[dependencies]
# Basic dependencies for standalone compilation
std = { version = "1.0", package = "std", optional = true }

# Quantum computing dependencies
rayon = { version = "1.8", optional = true }           # Parallel processing
crossbeam = "0.8"       # Concurrent data structures
parking_lot = "0.12"    # High-performance locks

# Arrow dependencies
arrow = "55.1.0"        # Apache Arrow
parquet = "55.1.0"      # Parquet format support

# Math and science
num-complex = "0.4"     # Complex numbers
ndarray = "0.15"        # N-dimensional arrays

# Serialization
serde = { version = "1.0", features = ["derive"] }
bincode = "1.3"

# Utilities
log = "0.4"
anyhow = "1.0"
thiserror = "1.0"

# Optional benchmarking
criterion = { version = "0.5", features = ["html_reports"], optional = true }

[dev-dependencies]
tempfile = "3.8"

[features]
default = ["quantum-core", "arrow-optimization"]

# Core quantum features
quantum-core = []
quantum-lexing = ["quantum-core"]
quantum-parsing = ["quantum-core"]
quantum-semantic = ["quantum-core"]
quantum-optimization = ["quantum-core"]

# Arrow features
arrow-optimization = []
arrow-columnar = ["arrow-optimization"]
arrow-vectorization = ["arrow-optimization"]
arrow-compression = ["arrow-optimization"]

# Performance features
simd = []
parallel = ["rayon"]
high-performance = ["simd", "parallel"]

# Development features
benchmarks = ["criterion"]
profiling = []

[profile.dev]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true

[profile.release]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
lto = "fat"
codegen-units = 1

# Quantum-optimized profile
[profile.quantum]
inherits = "release"
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"

[[bench]]
name = "quantum_compiler_benchmarks"
harness = false
required-features = ["benchmarks"]

[[bench]]
name = "arrow_data_benchmarks"
harness = false
required-features = ["benchmarks"]

[package.metadata.docs.rs]
features = ["quantum-core", "arrow-optimization"]
rustdoc-args = ["--cfg", "docsrs"]
